# vim: set foldmethod=marker foldmarker={{{,}}}:
#!/usr/bin/env bash
# shellcheck disable=SC1091
source "$HOME/dev/binx/profile/sane_fn.sh"
PROJ_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export PROJ_DIR
#Green "-M- exporting PROJ_DIR: $PROJ_DIR"

############### Python ###############
# Emulate the pipenvs's activate, because we can't source things in direnv
#layout_pipenv
#layout_poetry
#layout_pdm
#layout_uv
#layout_rye
#dotenv
export PYTHONPATH=$PROJ_DIR
export PIPENV_VENV_IN_PROJECT=1  # creates .venv
#export POETRY_VIRTUALENVS_IN_PROJECT=1  # creates .venv

if which tmux > /dev/null 2>&1; then
    tmux rename-window "$(basename "$PROJ_DIR")"
fi

############### Exports ###############
export RUN_ENV=local
export senv="source $PROJ_DIR/scripts/env.sh"
#export TW_FZF_ROOT="$HOME/dev"
#export SHOW_TF_PROMPT=0

############### Java ###############
#export MAVEN_PROFILE=bmw
#export JAVA_HOME="$HOME/.asdf/installs/java/openjdk-20"
#PATH_add $JAVA_HOME/bin

############### Rust ###############
#source "$HOME/.cargo/env"

############### BMW ###############
#export GH_HOST=atc-github.azure.cloud.bmw
dotenv ~/dev/s/private/sec-sops/tw.env

### unset for PyPi
#unset TWINE_USERNAME
#unset TWINE_PASSWORD

PATH_add $PROJ_DIR/scripts
PATH_add $PROJ_DIR/ankiview/target/debug

woot() {
    echo woot
}
export_function woot
